{"version":3,"sources":["redux/actionTypes.js","redux/actions/formActions.js","redux/actions/inputActions.js","redux/actions/noteActions.js","components/CreateNote.js","components/Note.js","components/Notes.js","assets/main.png","components/HomePage.js","components/Navbar.js","components/Footer.js","App.js","redux/reducers/notes.js","redux/reducers/inputs.js","redux/reducers/formDisplay.js","redux/reducers/index.js","redux/createStore.js","index.js"],"names":["formActions","setFormDisplay","type","actionTypes","inputActions","setInputTitle","title","setInputContent","content","setInputId","id","resetInput","noteActions","addNote","note","updateNote","index","deleteNote","CreateNote","useSelector","state","inputs","dispatch","useDispatch","className","placeholder","value","onChange","e","target","minLength","rows","cols","length","style","fontWeight","onClick","Modal","setAppElement","Note","onNoteClicked","useState","isModalOpen","setIsModalOpen","textTransform","substring","isOpen","onRequestClose","shouldCloseOnOverlayClick","overlayClassName","Notes","notes","map","HomePage","display","formDisplay","newNote","src","img","alt","shouldCloseOnEsc","Navbar","Footer","App","initialState","action","push","forEach","i","combineReducers","createStore","rootReducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.f6116601.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nexport default {\r\n    //NOTE-action-types:\r\n    ADD_NOTE: 'ADD_NOTE',\r\n    DELETE_NOTE: 'DELETE_NOTE',\r\n    UPDATE_NOTE: 'UPDATE_NOTE',\r\n\r\n    //input-action-types:\r\n    SET_INPUT_TITLE: 'SET_INPUT_TITLE',\r\n    SET_INPUT_CONTENT: 'SET_INPUT_CONTENT',\r\n    SET_INPUT_ID: 'SET_INPUT_ID',\r\n    RESET_INPUT: 'RESET_INPUT',\r\n\r\n    //form-display-action types:\r\n    SET_FORM_DISPLAY: 'SET_FORM_DISPLAY',\r\n}\r\n","import actionTypes from \"../actionTypes\";\r\n\r\nconst formActions = {\r\n    setFormDisplay : () => ({\r\n        type: actionTypes.SET_FORM_DISPLAY\r\n    })\r\n}\r\n\r\nexport default formActions","import actionTypes from '../actionTypes'\r\n\r\nconst inputActions =  {\r\n    setInputTitle : title => ({\r\n        type: actionTypes.SET_INPUT_TITLE,\r\n        title\r\n    }),\r\n    setInputContent: content => ({\r\n        type: actionTypes.SET_INPUT_CONTENT,\r\n        content\r\n    }),\r\n    setInputId: id => ({\r\n        type: actionTypes.SET_INPUT_ID,\r\n        id\r\n    }),\r\n    resetInput: () => ({\r\n        type: actionTypes.RESET_INPUT\r\n    })\r\n}\r\n\r\nexport default inputActions","import actionTypes from '../actionTypes'\r\n\r\n const noteActions = {\r\n    addNote: (note) => ({\r\n        type: actionTypes.ADD_NOTE,\r\n        note\r\n    }),\r\n    updateNote: (index, note) => ({\r\n        type: actionTypes.UPDATE_NOTE,\r\n        index,\r\n        note\r\n    }),\r\n    deleteNote: (index) => ({\r\n        type: actionTypes.DELETE_NOTE,\r\n        index\r\n    })\r\n\r\n}\r\n\r\nexport default noteActions\r\n","import React from 'react'\r\nimport '../css/CreateNote.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport inputActions from '../redux/actions/inputActions';\r\nimport noteActions from '../redux/actions/noteActions';\r\nimport formActions from '../redux/actions/formActions';\r\n\r\nconst CreateNote = () => {\r\n    \r\n    const id = useSelector(state => state.inputs.id)\r\n    const title = useSelector(state => state.inputs.title)\r\n    const content = useSelector(state =>state.inputs.content)\r\n    const dispatch = useDispatch();\r\n\r\n    const addNote = () => {\r\n        if(title && content.length>150) {\r\n            dispatch(noteActions.addNote({\r\n                title,\r\n                content\r\n            }))\r\n            dispatch(inputActions.resetInput())\r\n            dispatch(formActions.setFormDisplay())\r\n        }\r\n    }\r\n\r\n    const updateNote = () => {\r\n        if(title && content.length >150){\r\n            dispatch(noteActions.updateNote(id, {\r\n                title, content\r\n            }))\r\n            dispatch(inputActions.resetInput())\r\n            dispatch(formActions.setFormDisplay())           \r\n        }  \r\n    }\r\n    \r\n    return (\r\n        <div className=\"form\">\r\n            <h3>{id === -1 ? \"NEW NOTE\" : \"UPDATE NOTE\"}</h3>\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    value={title}\r\n                    onChange={(e) => dispatch(inputActions.setInputTitle(e.target.value))}\r\n                    className=\"title\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <textarea \r\n                    placeholder=\"Description (minimum characters: 150)\"\r\n                    value={content}\r\n                    onChange= {(e) => dispatch(inputActions.setInputContent(e.target.value))}\r\n                    minLength=\"150\"\r\n                    rows=\"15\"\r\n                    cols=\"45\"\r\n                    className=\"textarea\"\r\n                />\r\n            { content.length <150 ? \r\n                <p className = {content.length < 150 ? 'error' : 'noError'}>{150 - content.length} characters remaining</p> :\r\n                <p style={{fontWeight: \"bold\"}}>Total: {content.length} characters</p>\r\n            }\r\n                <button onClick={id === -1 ? addNote : updateNote} className=\"btn\">\r\n                    {id === -1 ? \"ADD NOTE\" : \"UPDATE NOTE\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateNote\r\n\r\n","import React, { useState } from 'react'\r\nimport '../css/Note.css'\r\nimport noteActions from '../redux/actions/noteActions'\r\nimport inputActions from '../redux/actions/inputActions'\r\nimport { useDispatch} from 'react-redux'\r\nimport Modal from 'react-modal'\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst Note = ({id, title, content, onNoteClicked}) => {\r\n    \r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const deleteNote = () => {\r\n        dispatch(noteActions.deleteNote(id))\r\n        dispatch(inputActions.resetInput())\r\n    }    \r\n\r\n    return (\r\n        <main className=\"main\">\r\n                <div className=\"note\">\r\n                    <h2 style={{textTransform: \"capitalize\"}}>{title}</h2>\r\n                    <p>{content.substring(0,150)}...</p>\r\n                    <div>\r\n                        <button onClick={() => setIsModalOpen(true)} className=\"btnP\">View</button>\r\n                        <button onClick={onNoteClicked} className=\"btnP\">Edit</button>\r\n                        <button onClick={deleteNote} className=\"btnP\">Delete</button>\r\n                    </div>\r\n                </div>\r\n                <Modal \r\n                    isOpen={isModalOpen} \r\n                    onRequestClose={() => setIsModalOpen(false)}\r\n                    shouldCloseOnOverlayClick={false}\r\n                    className=\"viewModalContent animate-modal\"\r\n                    overlayClassName=\"viewModalOverlay\"\r\n                >\r\n                    <div className=\"viewNote\">\r\n                        <h2 className=\"viewTitle\">{title}</h2>\r\n                        <p className=\"viewContent\">{content}</p>\r\n                        <button onClick={() => setIsModalOpen(false)} className=\"cross top\">X</button>\r\n                    </div>\r\n                </Modal>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport '../css/Notes.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport inputActions from '../redux/actions/inputActions'\r\nimport formActions from '../redux/actions/formActions'\r\nimport Note from './Note'\r\n\r\nconst Notes = () => {\r\n    const dispatch = useDispatch();\r\n    const notes = useSelector(state => state.notes.notes)\r\n    \r\n    const onNoteClicked = (note, index) => {\r\n        dispatch(formActions.setFormDisplay())\r\n        dispatch(inputActions.setInputId(index))\r\n        dispatch(inputActions.setInputTitle(note.title))\r\n        dispatch(inputActions.setInputContent(note.content))\r\n    }\r\n\r\n    \r\n    if(notes.length === 0 ) {\r\n        return (\r\n            <div className=\"noNote\">\r\n                There are no notes yet.<br /> Please create a new one :)\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h4 className=\"number\">{notes.length > 1 ? `${notes.length} notes available` : `${notes.length} note available`}</h4>\r\n            <div className=\"notes\">\r\n            {notes.map((note, index) => {\r\n                if(note){\r\n                    return(\r\n                        <Note \r\n                            key={index}\r\n                            id={index}\r\n                            title={note.title}\r\n                            content={note.content}\r\n                            onNoteClicked={() => {\r\n                                onNoteClicked(note, index);\r\n                            }}\r\n                        />\r\n                    )\r\n                }\r\n                return null\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n\r\n","export default __webpack_public_path__ + \"static/media/main.8844c01f.png\";","import React from 'react'\r\nimport '../css/HomePage.css'\r\nimport formActions from '../redux/actions/formActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CreateNote from './CreateNote'\r\nimport Notes from './Notes'\r\nimport inputActions from '../redux/actions/inputActions'\r\nimport Modal from 'react-modal'\r\nimport img from '../assets/main.png'\r\n\r\nconst HomePage = () => {\r\n  const dispatch = useDispatch();\r\n  const display = useSelector(state => state.formDisplay)\r\n\r\n  const newNote = () => {\r\n    dispatch(formActions.setFormDisplay())\r\n    dispatch(inputActions.resetInput())\r\n  }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"img\">\r\n                <img src={img} alt='' className=\"img\" />\r\n            </div>\r\n              <Modal \r\n                  isOpen={display} \r\n                  onRequestClose={newNote}\r\n                  shouldCloseOnEsc={false}\r\n                  shouldCloseOnOverlayClick={false}\r\n                  className=\"content animate-modal\"\r\n                  overlayClassName=\"overlay\"\r\n              >\r\n              <button onClick={newNote} className=\"cross top\">X</button>\r\n                  <CreateNote  />\r\n              </Modal>\r\n              <Notes />\r\n              <div>\r\n                <button onClick={newNote} className=\"plus\">New Note</button>\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport '../css/Navbar.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n            <nav>\r\n                <div>\r\n                    <h4>Welcome</h4>\r\n                </div>\r\n                <div className=\"nav\">\r\n                    <h4>Notes</h4>\r\n                </div>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport '../css/Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer\">\r\n                Made by Saumya Dubey\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\nimport HomePage from './components/HomePage'\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer'\n\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <HomePage />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n\n","import actionTypes from \"../actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n    notes: []\r\n}\r\n\r\nconst notes =  (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_NOTE: {\r\n            const notes = [...state.notes];\r\n            notes.push(action.note);\r\n            return {\r\n                notes\r\n            }\r\n        }\r\n        case actionTypes.DELETE_NOTE: {\r\n            const {index} = action;\r\n            const notes = [];\r\n            state.notes.forEach((note, i) => {\r\n                if(index !== i) {\r\n                    notes.push(note)\r\n                }\r\n            })\r\n            return {\r\n                notes\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_NOTE : {\r\n            const {index, note} = action;\r\n            const notes = [...state.notes];\r\n            notes[index] = note;\r\n            return {\r\n                notes\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n        \r\n}\r\n}\r\nexport default notes","import actionTypes from '../actionTypes'\r\n\r\nconst initialState = {\r\n    id: -1,\r\n    title: \"\",\r\n    content: \"\"\r\n}\r\n\r\nconst inputs =  (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_INPUT_TITLE: {\r\n            const {title} = action;\r\n            return {\r\n                ...state,\r\n                title\r\n            }\r\n        }\r\n        case actionTypes.SET_INPUT_CONTENT: {\r\n            const {content} = action;\r\n            return {\r\n                ...state,\r\n                content\r\n            }\r\n        }\r\n        case actionTypes.SET_INPUT_ID: {\r\n            const {id} = action;\r\n            return {\r\n                ...state,\r\n                id\r\n            }\r\n        }\r\n        case actionTypes.RESET_INPUT: {\r\n            return initialState\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default inputs","import actionTypes from \"../actionTypes\";\r\n\r\nconst formDisplay = (state = false, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_FORM_DISPLAY :\r\n            return !state;\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default formDisplay","import { combineReducers } from 'redux';\r\nimport notes from './notes'\r\nimport inputs from './inputs'\r\nimport formDisplay from './formDisplay'\r\n\r\nexport default combineReducers({\r\n    inputs,\r\n    formDisplay,\r\n    notes\r\n})","import {createStore } from 'redux';\r\nimport rootReducers from './reducers';\r\n\r\nexport default createStore(rootReducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/createStore';\nimport {Provider} from 'react-redux'\nimport './index.css'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}